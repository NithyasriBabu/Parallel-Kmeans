FINAL PROJECT PROPOSAL Due 11/9

Provide a project title and list of group member names.
Data Parallelism in KMeans Clustering by Nithyasri Babu

Part 1 - Background and Motivation: Discuss your project problem along with your motivations and reasons for choosing this project. Include any relevant background or research interests that may have influenced your decision for choosing the project.

KMeans Clustering is one of the popularly used unsupervised learning algorithms because of its simplicity and versatility. It's called simple as it as an iterative set of steps that is done until the results converge at an acceptable point. I am a machine learning enthusiast and have used KMeans in some of my projects. Given that KMeans has a decent complexity of O(nkt) where n is the number of data points , k is number of clusters formed and t is the number of iterations it takes for convergence. It does work slowly for a data set which is huge and has a relatively high number of clusters. There are only few steps in the algorithm which are done repeatedly until it converges. 

1) Find the distance of a each data point to all centroids. 
2) Assign each data point to cluster with closest centroid.
3) Update Centroid Values

Out the few steps mentioned above the maximum time taken is to calculate the distance from 

2 - Application-level Objectives

Discuss your goals for this project, what you would like to accomplish as a result.
List the benefits of your end product. List the must-have features and functionalities for the project. List the optional features and functionalities for the project.

Part 3 -  Design Overview
Draw a block diagram of the overview of the project, include any preliminary flow charts of your algorithms and discuss where you believe the parallelism in this algorithm is. Break down your project into components you plan to have assigned to host and device/kernels, list them and describe the interface, inputs and outputs of each module and what it accomplishes.

Part 4 - Performance Goals and Validation

Set a minimum performance goal for what your application is trying to accomplish. It should be a non-trivial speedup over currently available sequential solutions. Describe where you see the potential bottlenecks in terms of your block diagram in Part 3.

Part 5 -  Schedule and Division of Work

Make sure that you plan your work so that you can avoid a big rush right before the final deadline which is December 10. Also, make plans so that you can have a few generations of implementations; each should be successively better than its predecessor. It would be a good idea to use this to delegate different modules and responsibilities among your team members. You will not necessarily be graded on how true your schedule is to final reality, but failure to plan is equivalent to planning for failure. Describe the division of work. What will each member of your team be responsible for? Make sure that you can self-access, and that each member can justify the work that is claimed.